import openai

# Set your OpenAI API key here
api_key = ""

# Initialize OpenAI API key
openai.api_key = api_key

# Define the chat function to interact with the chatbot
def chat_with_bot(user_input):
    # Create a list of messages
    conversation = [
        {"role": "system", "content": "You are my sidekick"},
        {"role": "user", "content": user_input}
    ]

    # Generate the response
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=conversation,
    )

    # Extract the text
    chatbot_reply = response['choices'][0]['message']['content']
    return chatbot_reply

# Define the main program
def main():
    print("Shopping Le")
    print("1. Feeling Lazy")
    print("2. Active Today")

    choice = input("Choose an option (1/2): ")

    if choice == '1':
        feeling_lazy()
    elif choice == '2':
        active_today()
    else:
        print("Invalid choice. Please choose 1 or 2.")

def feeling_lazy():
    print("Feeling Lazy")
    print("1. Food Restaurant")
    print("2. Suggestion")

    choice = input("Choose an option (1/2): ")

    if choice == '1':
        food_restaurant()
    elif choice == '2':
        user_input = input("Describe your mood or what you feel like doing: ")
        chatbot_response = chat_with_bot(user_input)
        print("Chatbot:", chatbot_response)
    else:
        print("Invalid choice. Please choose 1 or 2.")

def food_restaurant():
    user_input = input("Describe your food craving or what type of cuisine you're in the mood for: ")
    response = generate_food_restaurant_suggestion(user_input)
    print("Restaurant Suggestion:")
    print(response)

def generate_food_restaurant_suggestion(user_input):
    # Use OpenAI GPT-3 to generate a restaurant suggestion based on the user's input
    prompt = f"Suggest a restaurant for someone craving '{user_input}'"
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "You are my sidekick"},
            {"role": "user", "content": prompt}
        ],
    )
    chatbot_reply = response['choices'][0]['message']['content']
    return chatbot_reply

def active_today():
    print("Active Today")
    description = input("Write a description of your activity today: ")
    ingredients = find_related_ingredients(description)
    print("Related Ingredients:")
    for ingredient in ingredients:
        print("- " + ingredient)

def find_related_ingredients(description):
    # Use OpenAI GPT-3.5 to find ingredients related to the user's activity description
    prompt = f"Find ingredients related to the user's activity: {description}"
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "You are my sidekick"},
            {"role": "user", "content": prompt}
        ],
    )
    chatbot_reply = response['choices'][0]['message']['content']
    ingredients = chatbot_reply.split("\n")
    return ingredients

if __name__ == "__main__":
    main()
